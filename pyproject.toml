[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "basileia-engine"
version = "0.1.0"
description = "Open-source Basel Capital Engine for regulatory capital calculations"
authors = [{name = "Basel Capital Engine Contributors"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pydantic>=2.0.0",
    "scipy>=1.7.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
api = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
]
app = [
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "altair>=5.1.0",
]
cli = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.88.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]
performance = [
    "polars>=0.19.0",
    "numba>=0.58.0",
]
all = [
    "basileia-engine[api,app,cli,dev,performance]"
]

[project.urls]
Homepage = "https://github.com/your-username/basileia-engine"
Documentation = "https://basileia-engine.readthedocs.io"
Repository = "https://github.com/your-username/basileia-engine"
Issues = "https://github.com/your-username/basileia-engine/issues"

[project.scripts]
basileia = "basileia.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=basileia --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/basileia"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
